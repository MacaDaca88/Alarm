
////full code

#include <TTP229.h>

#include <LiquidCrystal_I2C.h>
#include <IRremote.h>
#include <DHT_U.h>
#include <FastLED_NeoPixel.h>
#include <Adafruit_Fingerprint.h>

#define RXPIN A4// change this to whatever  // RXPIN is IN from sensor (GREEN wire)
#define TXPIN A5// change this to whatever  // TXPIN is OUT from arduino  (WHITE wire)
SoftwareSerial mySerial(RXPIN, TXPIN);      // Set up the serial port to use softwareserial..
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

#define lazer 6

#define DATA_PIN A6
#define NUM_LEDS 8
#define DATA_PIN2 13
#define DATA_PIN3 A7
#define NUM_LEDS3 31
#define NUM_LEDS2 4
Adafruit_NeoPixel strip(NUM_LEDS, DATA_PIN, NEO_GRB);
Adafruit_NeoPixel strip2(NUM_LEDS2, DATA_PIN2, NEO_GRB);
Adafruit_NeoPixel strip3(NUM_LEDS3, DATA_PIN3, NEO_GRB);

#define BLINK_TIME 50
#define BLINK_GAP 100

#define Micro A12
#define playe 9
#define rec 8
#define playl 10

#define RECV_PIN 2
#define relay 31

#define ldR A15
#define PIRmotion 41

#define sclpin A8             // orange  scl
#define sdopin A9             // yellow  sdo

#define DHTPIN A10
#define DHTTYPE    DHT11     // DHT 11
DHT_Unified dht(DHTPIN, DHTTYPE);

LiquidCrystal_I2C lcd(0x27, 20, 4);         // purple sda 20, blue scl 21
LiquidCrystal_I2C lcd2(0x26, 16, 2);         // purple sda 20, blue scl 21
IRrecv irrecv(RECV_PIN);
decode_results results;

#define Password_length 2                                                          // define password legnth +1
char Data[Password_length];                                                        // define password storage
char Master[Password_length] = "1";

int currentMillis = millis();
unsigned long previousMillis;
const long interval = 50;
const long ledtimer = 500;
const long ledtimer2 = 100;
const long lcdclear = 5;
int key = 0;
int i;
int val;
int fingerprintID = 0;
int fingerprintstate = 1;
int b;

byte data_count = 0;

void setup() {
  lcd.init();
  lcd2.init();
  lcd.backlight();
  lcd2.backlight();
  strip.begin();  // initialize strip (required!)
  strip2.begin();  // initialize strip (required!)
  strip3.begin();  // initialize strip (required!)
  strip.show();
  strip3.show();
  strip.setBrightness(15);
  strip3.setBrightness(15);
  strip.Color(255, 255, 255); // set pixels to white
  strip.show();
  pinMode(ldR, INPUT);
  pinMode(PIRmotion, INPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(relay, OUTPUT);
  pinMode(Micro, INPUT);
  pinMode(rec, OUTPUT);
  pinMode(rec, OUTPUT);
  pinMode(playl, OUTPUT);
  pinMode(lazer, OUTPUT);
  pinMode(sclpin, OUTPUT);
  pinMode(sdopin, INPUT);
  digitalWrite(sclpin, HIGH);
  digitalWrite(relay, LOW);
  digitalWrite(playl, LOW);
  digitalWrite(playe, LOW);
  digitalWrite(rec, HIGH);
  digitalWrite(lazer, LOW);
  Serial.begin(9600);
  dht.begin();

  Serial.println(F("DHTxx Unified Sensor Example"));
  // Print temperature sensor details.
  sensor_t sensor;
  dht.temperature().getSensor(&sensor);
  Serial.println(F("------------------------------------"));
  Serial.println(F("Temperature Sensor"));
  Serial.print  (F("Sensor Type: ")); Serial.println(sensor.name);
  Serial.print  (F("Driver Ver:  ")); Serial.println(sensor.version);
  Serial.print  (F("Unique ID:   ")); Serial.println(sensor.sensor_id);
  Serial.print  (F("Max Value:   ")); Serial.print(sensor.max_value); Serial.println(F("°C"));
  Serial.print  (F("Min Value:   ")); Serial.print(sensor.min_value); Serial.println(F("°C"));
  Serial.print  (F("Resolution:  ")); Serial.print(sensor.resolution); Serial.println(F("°C"));
  Serial.println(F("------------------------------------"));
  // Print humidity sensor details.
  dht.humidity().getSensor(&sensor);
  Serial.println(F("Humidity Sensor"));
  Serial.print  (F("Sensor Type: ")); Serial.println(sensor.name);
  Serial.print  (F("Driver Ver:  ")); Serial.println(sensor.version);
  Serial.print  (F("Unique ID:   ")); Serial.println(sensor.sensor_id);
  Serial.print  (F("Max Value:   ")); Serial.print(sensor.max_value); Serial.println(F("%"));
  Serial.print  (F("Min Value:   ")); Serial.print(sensor.min_value); Serial.println(F("%"));
  Serial.print  (F("Resolution:  ")); Serial.print(sensor.resolution); Serial.println(F("%"));
  Serial.println(F("------------------------------------"));
  // Set delay between sensor readings based on sensor details.
  irrecv.enableIRIn(); // Start the receiver
}

void loop() {
  int currentMillis = millis();
  int sensorValue = analogRead(A15);
  int microValue = analogRead(A12);

  int Battery1 = analogRead(A1);
  float voltage2 = Battery1 * (5.0 / 1023.0);
  int Battery2 = analogRead(A2);
  float voltage = Battery2 * (5.0 / 1023.0);

  lcd2.setCursor(0, 0);
  lcd2.print("A1 = ");
  lcd2.print(voltage2);
  lcd2.print("v");

  lcd2.setCursor(0, 1);
  lcd2.print("A2 = ");
  lcd2.print(voltage);
  lcd2.print("v");

  delay(5);

  for ( i = 1; i < 17; i++) {
    digitalWrite(sclpin, LOW); //toggle clock
    digitalWrite(sclpin, HIGH);
    if (!digitalRead(sdopin)) {
      key = i; //valid data found
      Serial.println(i);
    }
  }

  if (key == 1) {

  }

  if (key == 2) {

  }

  if (key == 3) {

  }

  if (key == 4) {

  }
  if (key == 5) {

  }

  if (key == 6) {
    digitalWrite(lazer, HIGH);
    delay(50);
    digitalWrite(lazer, LOW);

  }

  if (key == 7) {

  }

  if (key == 8) {

  }

  if (key == 9) {
    digitalWrite(lazer, LOW);
  }

  if (key == 10) {

  }
  if (key == 11) {

  }

  if (key == 12) {
    led();
  }

  if (key == 13) {
    digitalWrite(playl, HIGH);        // start play

  }

  if (key == 14) {
    digitalWrite(rec, LOW);       // start recording

  }

  if (key == 15) {
    digitalWrite(playl, LOW);     // stop play

  }

  if (key == 16) {
    digitalWrite(rec, HIGH);        // stop recording

  } else {

    if (irrecv.decode(&results)) {
      switch (results.value) {
        case 0xFFA25D: Serial.println("CH-");
          digitalWrite(relay, 0);
          break;
        case 0xFFE21D: Serial.println("CH+");
          digitalWrite(relay, 1);
          break;
        case 0xFF906F: Serial.println("EQ");

          digitalWrite(lazer, HIGH);
          delay(50);
          digitalWrite(lazer, LOW);
          break;
        case 0xFFE01F: Serial.println("-");
          strip.setBrightness(15);
          strip3.setBrightness(15);
          break;
        case 0xFF629D: Serial.println("CH");
          strip.setPixelColor(0, strip.Color(255, 255, 255));                 // set STRIP to white
          strip.setPixelColor(1, strip.Color(255, 255, 255));
          strip.setPixelColor(2, strip.Color(255, 255, 255));
          strip.setPixelColor(3, strip.Color(255, 255, 255));
          strip.setPixelColor(4, strip.Color(255, 255, 255));
          strip.setPixelColor(5, strip.Color(255, 255, 255));
          strip.setPixelColor(6, strip.Color(255, 255, 255));
          strip.setPixelColor(7, strip.Color(255, 255, 255));
          strip.show();
          break;
        case 0xFF22DD: Serial.println("PREVIOUS");
          strip.setBrightness(10);
          strip3.setBrightness(5);

          break;
        case 0xFFC23D: Serial.println("PLAY");
          strip3.setPixelColor(0, strip2.Color(255, 255, 255));              // set STRIP3 to white
          strip3.setPixelColor(1, strip2.Color(255, 255, 255));
          strip3.setPixelColor(2, strip2.Color(255, 255, 255));
          strip3.setPixelColor(3, strip2.Color(255, 255, 255));
          strip3.setPixelColor(4, strip2.Color(255, 255, 255));
          strip3.setPixelColor(5, strip2.Color(255, 255, 255));
          strip3.setPixelColor(6, strip2.Color(255, 255, 255));
          strip3.setPixelColor(7, strip2.Color(255, 255, 255));
          strip3.setPixelColor(8, strip2.Color(255, 255, 255));
          strip3.setPixelColor(9, strip2.Color(255, 255, 255));
          strip3.setPixelColor(10, strip2.Color(255, 255, 255));
          strip3.setPixelColor(11, strip2.Color(255, 255, 255));
          strip3.setPixelColor(12, strip2.Color(255, 255, 255));
          strip3.setPixelColor(13, strip2.Color(255, 255, 255));
          strip3.setPixelColor(14, strip2.Color(255, 255, 255));
          strip3.setPixelColor(15, strip2.Color(255, 255, 255));
          strip3.setPixelColor(16, strip2.Color(255, 255, 255));
          strip3.setPixelColor(17, strip2.Color(255, 255, 255));
          strip3.setPixelColor(18, strip2.Color(255, 255, 255));
          strip3.setPixelColor(19, strip2.Color(255, 255, 255));
          strip3.setPixelColor(20, strip2.Color(255, 255, 255));
          strip3.setPixelColor(21, strip2.Color(255, 255, 255));
          strip3.setPixelColor(22, strip2.Color(255, 255, 255));
          strip3.setPixelColor(23, strip2.Color(255, 255, 255));
          strip3.setPixelColor(24, strip2.Color(255, 255, 255));
          strip3.setPixelColor(25, strip2.Color(255, 255, 255));
          strip3.setPixelColor(26, strip2.Color(255, 255, 255));
          strip3.setPixelColor(27, strip2.Color(255, 255, 255));
          strip3.setPixelColor(28, strip2.Color(255, 255, 255));
          strip3.setPixelColor(29, strip2.Color(255, 255, 255));
          strip3.setPixelColor(30, strip2.Color(255, 255, 255));
          strip3.show();
          break;
        case 0xFFA857: Serial.println("+");
          strip.setBrightness(100);                                        // set pixel brightness to 100 STRIP
          strip3.setBrightness(100);                                       // set pixel brightness to 100 STRIP3
          break;
        case 0xFF6897: Serial.println("0");
          strip.setBrightness(0);                                          // set pixel brightness to 0 STRIP
          strip3.setBrightness(0);                                         // set pixel brightness to 0 STRIP3
          strip.show();
          strip3.show();
          break;
        case 0xFF9867: Serial.println("100+");
          strip.setBrightness(150);                                        // set pixel brightness to 150 STRIP
          strip3.setBrightness(150);                                       // set pixel brightness to 150 STRIP3
          break;
        case 0xFFB04F: Serial.println("200+");
          strip.setBrightness(255);                                        // set pixel brightness to 255 STRIP
          strip3.setBrightness(255);                                       // set pixel brightness to 255 STRIP
          break;
        case 0xFF30CF: Serial.println("1");
          strip.setPixelColor(0, strip.Color(255, 0, 0));                  // set STRIP to red
          strip.setPixelColor(1, strip.Color(255, 0, 0));
          strip.setPixelColor(2, strip.Color(255, 0, 0));
          strip.setPixelColor(3, strip.Color(255, 0, 0));
          strip.setPixelColor(4, strip.Color(255, 0, 0));
          strip.setPixelColor(5, strip.Color(255, 0, 0));
          strip.setPixelColor(6, strip.Color(255, 0, 0));
          strip.setPixelColor(7, strip.Color(255, 0, 0));
          strip.show();
          break;
        case 0xFF18E7: Serial.println("2");
          strip.setPixelColor(0, strip.Color(0, 0, 255));                  // set STRIP to blue
          strip.setPixelColor(1, strip.Color(0, 0, 255));
          strip.setPixelColor(2, strip.Color(0, 0, 255));
          strip.setPixelColor(3, strip.Color(0, 0, 255));
          strip.setPixelColor(4, strip.Color(0, 0, 255));
          strip.setPixelColor(5, strip.Color(0, 0, 255));
          strip.setPixelColor(6, strip.Color(0, 0, 255));
          strip.setPixelColor(7, strip.Color(0, 0, 255));
          strip.show();
          break;
        case 0xFF7A85: Serial.println("3");

          for (int b = 0; b < 31; i++) {
            strip3.setPixelColor(i, strip3.Color(0, 150, 0)); // Moderately bright green color.
            strip3.show(); // This sends the updated pixel color to the hardware.
          }
          break;
        case 0xFF10EF: Serial.println("4");

          break;
        case 0xFF38C7: Serial.println("5");
          strip2.setPixelColor(0, strip2.Color(0, 255, 0));                // set STRIP2 (PIR)  to green
          strip2.setPixelColor(1, strip2.Color(0, 255, 0));
          strip2.setPixelColor(2, strip2.Color(0, 255, 0));
          strip2.setPixelColor(3, strip2.Color(0, 255, 0));
          strip2.show();
          break;
        case 0xFF5AA5: Serial.println("6");
          strip3.setPixelColor(0, strip2.Color(0, 255, 0));  // set pixel to green
          strip3.setPixelColor(1, strip2.Color(0, 255, 0));
          strip3.setPixelColor(2, strip2.Color(0, 255, 0));
          strip3.setPixelColor(3, strip2.Color(0, 255, 0));
          strip3.setPixelColor(4, strip2.Color(0, 255, 0));
          strip3.setPixelColor(5, strip2.Color(0, 255, 0));
          strip3.setPixelColor(6, strip2.Color(0, 255, 0));
          strip3.setPixelColor(7, strip2.Color(0, 255, 0));
          strip3.setPixelColor(8, strip2.Color(0, 255, 0));
          strip3.setPixelColor(9, strip2.Color(0, 255, 0));
          strip3.setPixelColor(10, strip2.Color(0, 255, 0));
          strip3.setPixelColor(11, strip2.Color(0, 255, 0));
          strip3.setPixelColor(12, strip2.Color(0, 255, 0));
          strip3.setPixelColor(13, strip2.Color(0, 255, 0));
          strip3.setPixelColor(14, strip2.Color(0, 255, 0));
          strip3.setPixelColor(15, strip2.Color(0, 255, 0));
          strip3.setPixelColor(16, strip2.Color(0, 255, 0));
          strip3.setPixelColor(17, strip2.Color(0, 255, 0));
          strip3.setPixelColor(18, strip2.Color(0, 255, 0));
          strip3.setPixelColor(19, strip2.Color(0, 255, 0));
          strip3.setPixelColor(20, strip2.Color(0, 255, 0));
          strip3.setPixelColor(21, strip2.Color(0, 255, 0));
          strip3.setPixelColor(22, strip2.Color(0, 255, 0));
          strip3.setPixelColor(23, strip2.Color(0, 255, 0));
          strip3.setPixelColor(24, strip2.Color(0, 255, 0));
          strip3.setPixelColor(25, strip2.Color(0, 255, 0));
          strip3.setPixelColor(26, strip2.Color(0, 255, 0));
          strip3.setPixelColor(27, strip2.Color(0, 255, 0));
          strip3.setPixelColor(28, strip2.Color(0, 255, 0));
          strip3.setPixelColor(29, strip2.Color(0, 255, 0));
          strip3.setPixelColor(30, strip2.Color(0, 255, 0));
          strip3.show();
          break;
        case 0xFF42BD: Serial.println("7");
          strip3.setPixelColor(0, strip2.Color(0, 0, 0));  // set pixel to green
          strip3.setPixelColor(1, strip2.Color(0, 0, 0));
          strip3.setPixelColor(2, strip2.Color(0, 0, 0));
          strip3.setPixelColor(3, strip2.Color(0, 0, 0));
          strip3.setPixelColor(4, strip2.Color(0, 0, 0));
          strip3.setPixelColor(5, strip2.Color(0, 0, 0));
          strip3.setPixelColor(6, strip2.Color(0, 0, 0));
          strip3.setPixelColor(7, strip2.Color(0, 0, 0));
          strip3.setPixelColor(8, strip2.Color(0, 0, 0));
          strip3.setPixelColor(9, strip2.Color(0, 0, 0));
          strip3.setPixelColor(10, strip2.Color(0, 0, 0));
          strip3.setPixelColor(11, strip2.Color(0, 0, 0));
          strip3.setPixelColor(12, strip2.Color(0, 0, 0));
          strip3.setPixelColor(13, strip2.Color(0, 0, 0));
          strip3.setPixelColor(14, strip2.Color(0, 0, 0));
          strip3.setPixelColor(15, strip2.Color(0, 0, 0));
          strip3.setPixelColor(16, strip2.Color(0, 0, 0));
          strip3.setPixelColor(17, strip2.Color(0, 0, 0));
          strip3.setPixelColor(18, strip2.Color(0, 0, 0));
          strip3.setPixelColor(19, strip2.Color(0, 0, 0));
          strip3.setPixelColor(20, strip2.Color(0, 0, 0));
          strip3.setPixelColor(21, strip2.Color(0, 0, 0));
          strip3.setPixelColor(22, strip2.Color(0, 0, 0));
          strip3.setPixelColor(23, strip2.Color(0, 0, 0));
          strip3.setPixelColor(24, strip2.Color(0, 0, 0));
          strip3.setPixelColor(25, strip2.Color(0, 0, 0));
          strip3.setPixelColor(26, strip2.Color(0, 0, 0));
          strip3.setPixelColor(27, strip2.Color(0, 0, 0));
          strip3.setPixelColor(28, strip2.Color(0, 0, 0));
          strip3.setPixelColor(29, strip2.Color(0, 0, 0));
          strip3.setPixelColor(30, strip2.Color(0, 0, 0));
          strip3.show();
          break;
        case 0xFF4AB5: Serial.println("8");
          strip.setPixelColor(0, strip.Color(250, 5, 229));  // set pixel 0 to pink
          strip.setPixelColor(1, strip.Color(250, 5, 229));
          strip.setPixelColor(2, strip.Color(250, 5, 229));
          strip.setPixelColor(3, strip.Color(250, 5, 229));
          strip.setPixelColor(4, strip.Color(250, 5, 229));
          strip.setPixelColor(5, strip.Color(250, 5, 229));
          strip.setPixelColor(6, strip.Color(250, 5, 229));
          strip.setPixelColor(7, strip.Color(250, 5, 229));
          strip.show();
          break;
        case 0xFF52AD: Serial.println("9");
          strip.setPixelColor(0, strip.Color(0, 255, 0));  // set pixel 0 to green
          strip.setPixelColor(1, strip.Color(0, 255, 0));
          strip.setPixelColor(2, strip.Color(0, 255, 0));
          strip.setPixelColor(3, strip.Color(0, 255, 0));
          strip.setPixelColor(4, strip.Color(0, 255, 0));
          strip.setPixelColor(5, strip.Color(0, 255, 0));
          strip.setPixelColor(6, strip.Color(0, 255, 0));
          strip.setPixelColor(7, strip.Color(0, 255, 0));
          strip.show();
          break;
      }
      irrecv.resume();

      delay(10);
    } else {
      pir();
      LDR();
      temp();
    }
  }
  return;
}

void led () {

  if (currentMillis - previousMillis <= ledtimer) {
    // save the last time you blinked the LED
    previousMillis = currentMillis;

    strip.setPixelColor(0, strip.Color(0, 0, 255));  // set pixel 0 to blue
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(1, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(2, strip.Color(255, 0, 0));  // set pixel 0 to red
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(3, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(4, strip.Color(0, 0, 255));  // set pixel 0 to blue
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(5, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(6, strip.Color(255, 0, 0));  // set pixel 0 to red
    strip.show();
    delay(BLINK_TIME);
    strip.setPixelColor(7, strip.Color(0, 0, 255));  // set pixel 0 to blue
    strip.show();
    delay(BLINK_GAP);

    delay(BLINK_TIME);
    strip.setPixelColor(0, strip.Color(250, 5, 229));  // set pixel 0 to pink
    delay(BLINK_TIME);
    strip.setPixelColor(1, strip.Color(0, 0, 255));  // set pixel 0 to blue
    delay(BLINK_TIME);
    strip.setPixelColor(2, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(3, strip.Color(255, 0, 0));  // set pixel 0 to red
    strip.show();
    delay(BLINK_TIME);

    strip.setPixelColor(0, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(1, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(2, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(3, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(4, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(5, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(6, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.setPixelColor(7, strip.Color(250, 5, 229));  // set pixel 0 to pink
    strip.show();
    delay(BLINK_GAP);

    strip.setPixelColor(0, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(1, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(2, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(3, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(4, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(5, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(6, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    delay(BLINK_TIME);
    strip.setPixelColor(7, strip.Color(0, 255, 0, 50));  // set pixel 0 to green
    strip.show();
    delay(BLINK_GAP);
  }
  return;
}

void temp() {

  // Get temperature event and print its value.
  sensors_event_t event;
  dht.temperature().getEvent(&event);
  if (isnan(event.temperature)) {
    Serial.println(F("Error reading temperature!"));
    lcd.clear();
    lcd.print(F("Error reading temperature!"));
    delay(500);
    lcd.clear();
  }
  else {
    lcd.setCursor(0, 0);
    lcd.print(F("Temp: "));
    lcd.print(event.temperature);
    lcd.print(F("C"));
    if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;
      Serial.print(F("Temperature: "));
      Serial.print(event.temperature);
      Serial.println(F("°C"));

    }
    // Get humidity event and print its value.
    dht.humidity().getEvent(&event);
    if (isnan(event.relative_humidity)) {
      Serial.println(F("Error reading humidity!"));
      lcd.clear();
      lcd.print(F("Error reading humidity!"));
      delay(500);
      lcd.clear();
    }
    else {
      lcd.setCursor(0, 1);
      lcd.print(F("Humidity: "));
      lcd.print(event.relative_humidity);
      lcd.print(F("%"));
    }
    if (currentMillis - previousMillis >= interval) {
      previousMillis = currentMillis;
      Serial.print(F("Humidity: "));
      Serial.print(event.relative_humidity);
      Serial.println(F("%"));
    }
  }
  delay(10);
  return;
}

void pir()  {

  val = digitalRead(PIRmotion);

  if (val == 1) {
    switch (val) {
      case 0:
        strip2.setBrightness(255);
        strip2.setPixelColor(0, strip2.Color(0, 255, 0));  // set pixel 0 to green
        strip2.setPixelColor(1, strip2.Color(0, 255, 0));
        strip2.setPixelColor(2, strip2.Color(0, 255, 0));
        strip2.setPixelColor(3, strip2.Color(0, 255, 0));
        strip2.show();
        Serial.println("pir on");

        delay(100);
        break;

      case 1:
        val = 0;
        strip2.setBrightness(0);
        strip2.show();
        break;
    }
  }
  return;
}

void piroff() {

  if (val == 0) {
    switch (val) {
      case 0:
        Serial.println("pir off");
      case 1:
        val = 1;
    }
  }
  if  (i >= 0) {
    Serial.println("piroff test");
    return;
  } else {
    piroff();
  }
}

void LDR () {
  int sensorValue = analogRead(A15);

  if (sensorValue >= 500) {
    strip.setBrightness(0);
    strip.show();
  }
  if (sensorValue <= 500) {
    strip.setBrightness(50);
    strip.show();
  }
  if (sensorValue <= 350) {
    strip.setBrightness(100);
    strip.show();
  }
  if (sensorValue <= 250) {
    strip.setBrightness(150);
    strip.show();
  }
  if (sensorValue <= 150) {
    strip.setBrightness(200);
    strip.show();
  }
  if (sensorValue <= 100) {
    strip.setBrightness(255);
    strip.show();
  }
  lcd.setCursor(0, 3);
  lcd.print("Light Sensor = ");
  lcd.print(sensorValue);

  return;
}
void clearData() {
  while (data_count != 0) {
    Data[data_count--] = 0;
    Serial.println("test stages8");
  }
  return;
}
